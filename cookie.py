# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Jun 30 21:14:32 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))